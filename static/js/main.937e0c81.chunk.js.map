{"version":3,"sources":["Main/Data/image.jpg","Main/Header/Nav/Nav.js","Main/Header/Header.js","Main/component/User.js","Main/component/About.js","Main/component/AnimatedProgressProvider.js","Main/component/skills/Skill.js","Main/component/skills/SkillList.js","Main/component/experiences/Experience.js","Main/component/experiences/ExperienceList.js","Main/Body/Pages/HomePage.js","Main/component/projects/Map.js","Main/component/projects/covidCases.js","Main/Body/Pages/ExperiencePage.js","Main/component/Form.js","Main/Body/Pages/LoginPages/LoginPage.js","Main/Body/Pages/LoginPages/LogoutPage.js","Main/Body/Pages/LoginPages/CreateAccountPage.js","Main/Body/Body.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","useState","value","setValue","classes","makeStyles","theme","root","marginLeft","spacing","useStyles","className","Tabs","onChange","event","newValue","Tab","label","component","Link","to","process","Header","flexGrow","menuButton","marginRight","title","Toolbar","Typography","variant","Nav","display","flexDirection","margin","alignItems","paddingTop","paddingBottom","large","width","height","User","props","userInfo","Paper","elevation","Avatar","alt","src","Image","name","color","role","About","List","ListItem","ListItemAvatar","objective","Divider","permanentAddress","phone","AnimatedProgressProvider","interval","undefined","state","isAnimated","this","repeat","window","setInterval","setState","duration","clearInterval","start","valueStart","update","valueEnd","timing","ease","easingFunction","children","React","Component","defaultProps","Skill","years","skillName","easeQuadInOut","roundedValue","Math","round","maxValue","text","styles","buildStyles","pathTransition","padding","Skills","skills","skillInfo","Grid","container","map","skill","key","item","xs","year","listItems","summary","paddingLeft","Experience","experience","course","startDate","endDate","date","concat","ListItemText","primary","secondary","point","experiences","ExperienceList","flexWrap","child","marginTop","Home","direction","md","Data","basics","projects","Map","mapData","coronaData","setDate","type","setType","yesterday","setYesterday","getAvailableDates","Set","each","report_date","useEffect","element","d3","select","setCaptions","dateButton","typeButton","types","on","target","selectedIndex","e","console","log","selectAll","data","enter","append","attr","loadButtons","style","scale","projection","translate","countyPath","svg","topojson","objects","cb_2015_virginia_county_20m","bounds","tooltip","features","classed","county","properties","GEOID","NAME","getAttribute","pageY","pageX","loadMapData","currentData","filter","yesterdayData","max","index","currentCounty","fips","parseInt","deaths","hospitalizations","total_cases","domain","range","interpolate","loadCaseData","textAlign","CovidCases","loading","setLoading","setMapData","setCoronaData","then","match","params","projectName","Form","TextField","id","Button","Login","Logout","CreateAccount","Body","Container","path","ExperiencePage","Main","CssBaseline","AppBar","position","App","document","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,mC,kSCgC5BC,EAxBA,WAAK,IAAD,EACSC,mBAAS,GADlB,mBACVC,EADU,KACHC,EADG,KAWXC,EARYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,YAAa,CACXC,WAAYF,EAAMG,QAAQ,QAKhBC,GAEhB,OACI,yBAAKC,UAAaP,EAAQG,MACxB,kBAACK,EAAA,EAAD,CAAMV,MAASA,EAAOW,SAAY,SAACC,EAAMC,GAAYZ,EAASY,KAC5D,kBAACC,EAAA,EAAD,CAAKd,MAAS,EAAGe,MAAQ,OAAOC,UAAaC,IAAMC,GAAKC,gBC8EnDC,EAvFA,WAEb,IAYMlB,EAZYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJgB,SAAU,GAEZC,WAAY,CACVC,YAAanB,EAAMG,QAAQ,IAE7BiB,MAAO,CACLH,SAAU,MAIEb,GAGhB,OACE,oCACE,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKlB,UAAWP,EAAQsB,OAA5C,UAGA,kBAACI,EAAD,S,qDC7BFpB,EAAYL,aAAW,SAACC,GAAD,MAAW,CACpCC,KAAM,CACFwB,QAAS,OACTC,cAAe,SACf,QAAS,CACPC,OAAQ3B,EAAMG,QAAQ,IAExByB,WAAY,SACZC,WAAW,GACXC,cAAc,IAElBC,MAAO,CACHC,MAAOhC,EAAMG,QAAQ,IACrB8B,OAAQjC,EAAMG,QAAQ,SAwBf+B,EApBF,SAACC,GACV,IAAMrC,EAAUM,IACVgC,EAAWD,EAAMC,SAEvB,OACI,kBAACC,EAAA,EAAD,CAAOC,UAAa,EAAGjC,UAAaP,EAAQG,MACxC,kBAACsC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAKC,IAAOrC,UAAWP,EAAQiC,QACxD,kBAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAU,MAC9BwB,EAASO,MAEd,kBAACrB,EAAA,EAAD,CAAYsB,MAAM,iBACbR,EAASS,Q,0FCgBXC,EArCD,SAACX,GACX,IAAMC,EAAWD,EAAMC,SAEvB,OACI,kBAACC,EAAA,EAAD,CAAOC,UAAY,GACf,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC3B,EAAA,EAAD,KACKc,EAASc,YAGlB,kBAACC,EAAA,EAAD,CAAS5B,QAAQ,QAAQX,UAAU,OACnC,kBAACoC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC3B,EAAA,EAAD,KACKc,EAASgB,mBAGlB,kBAACD,EAAA,EAAD,CAAS5B,QAAQ,QAAQX,UAAU,OACnC,kBAACoC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC3B,EAAA,EAAD,KACKc,EAASiB,W,mCC1C5BC,E,4MACJC,cAAWC,E,EAEXC,MAAQ,CACNC,YAAY,G,kEAOO,IAAD,OACdC,KAAKxB,MAAMyB,OACbD,KAAKJ,SAAWM,OAAOC,aAAY,WACjC,EAAKC,SAAS,CACZL,YAAa,EAAKD,MAAMC,eAEH,IAAtBC,KAAKxB,MAAM6B,UAEdL,KAAKI,SAAS,CACZL,YAAaC,KAAKF,MAAMC,e,6CAM5BG,OAAOI,cAAcN,KAAKJ,Y,+BAGlB,IAAD,OACP,OACE,kBAAC,IAAD,CACEW,MAAO,iBAAO,CACZtE,MAAO,EAAKuC,MAAMgC,aAEpBC,OAAQ,iBAAO,CACbxE,MAAO,CACL,EAAK6D,MAAMC,WAAa,EAAKvB,MAAMkC,SAAW,EAAKlC,MAAMgC,YAE3DG,OAAQ,CACNN,SAAgC,IAAtB,EAAK7B,MAAM6B,SACrBO,KAAM,EAAKpC,MAAMqC,oBAIpB,gBAAG5E,EAAH,EAAGA,MAAH,OAAe,EAAKuC,MAAMsC,SAAS7E,U,GA7CL8E,IAAMC,WAAvCrB,EAOGsB,aAAe,CACpBT,WAAY,GA2CDb,QC9CTlD,EAAYL,YAAW,CACzBE,KAAK,CACDwB,QAAQ,OACRC,cAAc,SACdE,WAAY,YA2CLiD,EAvCD,SAAC1C,GACX,IAAM2C,EAAQ3C,EAAM2C,MACdC,EAAY5C,EAAM4C,UAElBjF,EAAUM,IAGhB,OACI,yBAAKC,UAAaP,EAAQG,MACtB,kBAAC,EAAD,CACIkE,WAAY,EACZE,SAAUS,EACVd,SAAUc,EAAM,EAChBN,eAAgBQ,MAEf,SAAApF,GACG,IAAMqF,EAAeC,KAAKC,MAAMvF,GAChC,OACI,kBAAC,IAAD,CACAA,MAAOA,EACPwF,SAAY,EACZC,KAAI,UAAKJ,EAAL,OAGJK,OAAQC,YAAY,CAChBC,eAAgB,cAOhC,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,MACfwD,K,SC3CX3E,EAAYL,YAAW,CACzBE,KAAK,CACDwB,QAAQ,OACRgE,QAAQ,MAuBDC,EApBA,SAACvD,GACZ,IAAMrC,EAAUM,IAEVuF,EAASxD,EAAMyD,UAErB,OACI,kBAACvD,EAAA,EAAD,CAAOC,UAAW,EAAGjC,UAAaP,EAAQG,MACtC,kBAAC4F,EAAA,EAAD,CAAMC,WAAS,EAAC3F,QAAW,IACtBwF,EAAOI,KAAK,SAACC,EAAMC,GAChB,OACI,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,EAACF,IAAOA,GACjB,kBAAC,EAAD,CAAOnB,MAASkB,EAAMI,KAAMrB,UAAaiB,EAAMrD,c,SClBrEvC,EAAYL,YAAW,CACzBsG,UAAU,CACN5E,QAAQ,OACRC,cAAc,SACdE,WAAW,SAEf0E,QAAQ,CACJC,YAAY,UA2CLC,EAvCI,SAACrE,GAChB,IAAMrC,EAAUM,IADQ,EAG0B+B,EAAMsE,WAAnDrF,EAHmB,EAGnBA,MAAOsF,EAHY,EAGZA,OAAQC,EAHI,EAGJA,UAAUC,EAHN,EAGMA,QAASN,EAHf,EAGeA,QAEnCO,EAAO,GAQX,MAPc,KAAXH,IACCG,EAAOA,EAAKC,OAAOJ,EAAS,QAEhCG,EAAOA,EAAKC,OAAOH,EACnB,MACAC,GAGI,6BACI,kBAACzD,EAAA,EAAD,MACA,kBAACH,EAAA,EAAD,CAAU3C,UAAaP,EAAQuG,WAC3B,kBAACU,EAAA,EAAD,CACIC,QACI,kBAAC1F,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWC,IAAMC,GAAIC,UAAA,iBAAmCK,IAC5EA,GAGT6F,UAAWJ,IAEf,kBAACE,EAAA,EAAD,CAAc1G,UAAYP,EAAQwG,SAC7BA,EAAQP,KAAI,SAACmB,EAAMjB,GAChB,OACI,kBAAC3E,EAAA,EAAD,CAAY2E,IAAOA,GACdiB,EAAMA,cCvCjC9G,EAAYL,YAAW,CACzBoH,YAAY,CACR1B,QAAQ,UAuBD2B,EAnBQ,SAACjF,GACpB,IAAMrC,EAAUM,IACV+G,EAAchF,EAAMgF,YAE1B,OACI,kBAAC9E,EAAA,EAAD,CAAOC,UAAY,EAAGjC,UAAaP,EAAQqH,aACvC,kBAAC7F,EAAA,EAAD,CAAYC,QAAU,MAAtB,eAGA,kBAACwB,EAAA,EAAD,KACKoE,EAAYpB,KAAI,SAACU,EAAYR,GAC1B,OACI,kBAAC,EAAD,CAAYQ,WAAcA,EAAYR,IAAOA,U,SCX/D7F,GAAYL,YAAW,CAC3BE,KAAM,CACJoH,SAAU,QAEZC,MAAM,CACJC,UAAU,MAuFCC,GAnFF,WAEX,IAAM1H,EAAUM,KAEhB,OACE,oCAEE,kBAACyF,EAAA,EAAD,CAAMC,WAAS,EAAC3F,QAAW,EAAGE,UAAaP,EAAQG,MACjD,kBAAC4F,EAAA,EAAD,CAAMC,WAAS,EAAC2B,UAAY,SAASvB,MAAI,EAACwB,GAAM,EAAGvB,GAAM,IACvD,kBAACN,EAAA,EAAD,CAAMxF,UAAaP,EAAQwH,OACzB,kBAAC,EAAD,CAAMlF,SAAYuF,GAAKC,WAG3B,kBAAC/B,EAAA,EAAD,CAAMC,WAAS,EAAC2B,UAAW,SAASvB,MAAI,EAACwB,GAAM,EAAGvB,GAAM,IACtD,kBAACN,EAAA,EAAD,CAAMxF,UAAaP,EAAQwH,OACzB,kBAAC,EAAD,CAAOlF,SAAYuF,GAAKC,UAE1B,kBAAC/B,EAAA,EAAD,CAAMxF,UAAaP,EAAQwH,OACzB,kBAAC,EAAD,CAAQ1B,UAAa+B,GAAKhC,UAG5B,kBAACE,EAAA,EAAD,CAAMxF,UAAaP,EAAQwH,OACzB,kBAAC,EAAD,CAAgBH,YAAeQ,GAAKR,eAGtC,kBAACtB,EAAA,EAAD,CAAMxF,UAAaP,EAAQwH,OACzB,kBAAC,EAAD,CAAgBH,YAAeQ,GAAKE,gB,sCCgOjCC,GA3QH,SAAC3F,GAAS,IAEX4F,EAAgD5F,EAAhD4F,QAAQC,EAAwC7F,EAAxC6F,WAAWnB,EAA6B1E,EAA7B0E,KAAKoB,EAAwB9F,EAAxB8F,QAAQC,EAAgB/F,EAAhB+F,KAAKC,EAAWhG,EAAXgG,QAF3B,EAGgBxI,mBAAS,IAHzB,mBAGVyI,EAHU,KAGAC,EAHA,KAmPjB,SAASC,IACL,OAAO,aAAI,IAAIC,IAAIP,EAAWjC,KAAI,SAACyC,GAC/B,OAAQA,EAAKC,iBAMrB,OAnPAC,qBAAU,YAgBV,WACI,IAAMC,EAAUC,KAAU,cAC1BD,EACKE,OAAO,YACPxD,KAAK,2CACVsD,EACKE,OAAO,eACPxD,KAAK,yDAtBVyD,GA4BJ,WACI,IAAMC,EAAaH,KAAU,eACvBI,EAAaJ,KAAU,eAEvBK,EAAQ,CAAC,SAAS,mBAAmB,SAG3CF,EACCG,GAAG,UAAU,SAAC1I,GACXyH,EAAQzH,EAAM2I,OAAOvJ,OACrB,IACIyI,EAAa7H,EAAM2I,OAAO3I,EAAM2I,OAAOC,cAAgB,GAAGxJ,OAE9D,MAAMyJ,GACFhB,EAAa,IACbiB,QAAQC,IAAI,kBAGnBC,UAAU,UACVC,KAAKnB,KACLoB,QACAC,OAAO,UACPtE,MAAK,SAACzF,EAAOqG,GACV,OAAOrG,KAGXqI,EAAQK,IAAoB,IAC5BD,EAAaC,IAAoB,IAGjCU,EACCE,GAAG,UAAS,SAAC1I,GACV2H,EAAQ3H,EAAM2I,OAAOvJ,UAExB4J,UAAU,UACVC,KAAKR,GACLS,QACAC,OAAO,UACPC,KAAK,SAAS,SAAChK,EAAMqG,GAClB,OAAOrG,KAEVyF,MAAK,SAACzF,EAAMqG,GACT,OAAOrG,KAGXuI,EAAQc,EAAM,IAxEdY,GA8EAjB,KACQ,YACPkB,MAAM,aAAa,UACnBA,MAAM,WAAY,YAClBA,MAAM,mBAAmB,SACzBA,MAAM,UAAW,OACjBA,MAAM,SAAS,oBAIpB,SAAqBC,GAAO,IAGpBC,EAAapB,OAEhBmB,MAAM,IAAQA,GACdE,UAAU,CAAC,EAAG,IAEXC,EAAatB,OAEhBoB,WAAWA,GAERG,EAAMvB,KACF,OACPgB,KAAK,sBAAuB,iBAC5BA,KAAK,UAAW,iBAEbnG,EAAQ2G,KAAiBrC,EAASA,EAAQsC,QAAQC,6BAClDC,EAASL,EAAWK,OAAO9G,GAE/BuG,EAAWC,UAAU,CAACjI,KAAauI,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EAAEtI,KAAcsI,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,IAEjH,IAAIC,EAAU5B,KAAU,YAExBuB,EACCX,UAAU,QACVC,KAAKhG,EAAMgH,UACXf,QACAC,OAAO,QACPe,QAAQ,UAAU,GAClBd,KAAK,MAAM,SAAAe,GACR,OAAOA,EAAOC,WAAWC,SAE5BjB,KAAK,QAAQ,SAAAe,GACV,OAAOA,EAAOC,WAAWE,QAG5BlB,KAAK,OAAQ,QACbE,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBA,MAAM,iBAAkB,SACxBA,MAAM,kBAAkB,SACxBF,KAAK,QAAS,GACdA,KAAK,IAAKM,GACVhB,GAAG,SAAS,SAAC1I,GACV8I,QAAQC,IAAI/I,MAEf0I,GAAG,aAAa,SAAC1I,GAEdoI,KAAUpI,EAAM2I,QACfW,MAAM,UAAW,OACjBA,MAAM,eAAgB,OAEvB,IAAIlK,EAAQY,EAAM2I,OAAO4B,aAAa,SAEtC,OADAP,EAAQnF,KAAR,UAAgB7E,EAAM2I,OAAO4B,aAAa,QAA1C,aAAsDnL,IAC/C4K,EAAQV,MAAM,aAAc,cAEtCZ,GAAG,aAAa,SAAC1I,GACd,OAAOgK,EACNV,MAAM,MAAQtJ,EAAMwK,MAAQ,GAAM,MAClClB,MAAM,OAAQtJ,EAAMyK,MAAQ,GAAM,SAEtC/B,GAAG,YAAY,SAAC1I,GAOb,OALAoI,KAAUpI,EAAM2I,QACfW,MAAM,UAAW,KACjBA,MAAM,eAAgB,OAEvBU,EAAQnF,KAAK,IACNmF,EAAQV,MAAM,aAAc,aA3JvCoB,CAAY,MACd,IAEFxC,qBAAU,YA8JV,WACI,IAAMyC,EAAcnD,EAAWoD,QAAO,SAAC3B,GACnC,OAAOA,EAAKhB,cAAgB5B,KAE1BwE,EAAgBrD,EAAWoD,QAAO,SAAC3B,GACrC,OAAOA,EAAKhB,cAAgBL,KAI5BkD,EAAe,WAATpD,GAA+B,qBAATA,EAAH,EAA4C,UAATA,EAAkB,IAAM,KAIxFiD,EAAYpF,KAAI,SAAC0D,EAAM8B,GACnB,IAAI3L,EACA4L,EAAgB5C,KACQ,OACPC,OAAO,UAAYY,EAAKgC,KAAO,MAGpD,IACgB,WAATvD,EAEKtI,OADwB4D,IAAzB6H,EAAcE,GACLG,SAASjC,EAAKkC,QAEdlC,EAAKkC,OAASN,EAAcE,GAAOI,OAGlC,qBAATzD,EAEAtI,OADwB4D,IAAzB6H,EAAcE,GACLG,SAASjC,EAAKmC,kBAGdnC,EAAKmC,iBAAmBP,EAAcE,GAAOK,iBAG5C,UAAT1D,EAEAtI,OADwB4D,IAAzB6H,EAAcE,GACLG,SAASjC,EAAKoC,aAGdpC,EAAKoC,YAAcR,EAAcE,GAAOM,YAIpDvC,QAAQC,IAAI,cAIhBiC,EACC5B,KAAK,QADN,UACkB1B,EADlB,aAC2BtI,IAE/B,MAAMyJ,GACFC,QAAQC,IAAI,0BAIhBiC,EACC5B,KAAK,QAAQ,WACV,OAAOhB,OAEEkD,OAAO,EAAE,EAAG,EAAGR,EAAI,EAAGA,IACtBS,MAAM,CAAC,QAAS,QAAS,SAAU,QACnCC,YAAYpD,KAJdA,CAIiChJ,SA3NhDqM,KACF,CAACpF,EAAMqB,EAAKE,IA0OV,yBAAK/H,UAAY,YAAYyJ,MAAO,CAACoC,UAAU,WAC3C,wBAAI7L,UAAW,WAAf,yBAGA,uBAAGA,UAAY,cAAf,4BAGA,4BAAQA,UAAY,mBACpB,4BAAQA,UAAY,mBACpB,8BACA,yBAAKA,UAAY,cC/Nd8L,GAtCI,WAAO,IAAD,EACOxM,oBAAS,GADhB,mBAChByM,EADgB,KACPC,EADO,OAEO1M,mBAAS,IAFhB,mBAEhBoI,EAFgB,KAEPuE,EAFO,OAGa3M,mBAAS,IAHtB,mBAGhBqI,EAHgB,KAGJuE,EAHI,OAIA5M,mBAAS,IAJT,mBAIhBkH,EAJgB,KAIXoB,EAJW,OAKCtI,mBAAS,IALV,mBAKhBuI,EALgB,KAKVC,EALU,KAoBvB,OAbAO,qBAAU,WACL0D,GAEDxD,KAZqB,kHAYO4D,MAAK,SAACzE,GAChCa,KAZyB,qDAYS4D,MAAK,SAACxE,GACtCsE,EAAWvE,GACXwE,EAAcvE,GACdqE,GAAW,WAIjB,CAACD,IAGD,8BAEKA,GACD,kBAAC,GAAD,CACErE,QAASA,EACTC,WAAcA,EACdnB,KAAOA,EACPoB,QAAWA,EACXC,KAAQA,EACRC,QAAWA,EACXkE,WAAcA,MCqBT7F,GAtDI,SAAC,GAAW,IAAViG,EAAS,EAATA,MACjB,MAAgC,+BAA7BA,EAAMC,OAAOC,YAER,oCACI,2BAAIF,EAAMC,OAAOC,aACjB,kBAAC,GAAD,OAMJ,2BAAIF,EAAMC,OAAOC,c,oBCoBdC,GA9BF,SAACzK,GAEV,MAAmB,UAAhBA,EAAM8G,MAED,kBAAC5G,EAAA,EAAD,KACI,kBAACwK,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,aACvC,kBAACkM,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,aACvC,kBAACoM,GAAA,EAAD,eAIY,kBAAhB5K,EAAM8G,MAEN,kBAAC5G,EAAA,EAAD,KACI,kBAACwK,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,eACvC,kBAACkM,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,cACvC,kBAACkM,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,aACvC,kBAACkM,GAAA,EAAD,CAAWC,GAAG,iBAAiBnM,MAAQ,aAEvC,kBAACoM,GAAA,EAAD,wBAMJ,2CClBGC,GARD,WACV,OACI,yBAAK3M,UAAY,aACb,kBAAC,GAAD,CAAM4I,MAAQ,YCGXgE,GARA,WACX,OACI,yBAAK5M,UAAU,cACX,uCCOG6M,GARO,WAClB,OACI,yBAAK7M,UAAY,qBACb,kBAAC,GAAD,CAAM4I,MAAQ,oBCuBXkE,GAjBF,WACT,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAMtM,gBAAmCH,UAAaoM,KAC7D,kBAAC,IAAD,CAAOK,KAAMtM,iBAAoCH,UAAaqM,KAC9D,kBAAC,IAAD,CAAOI,KAAMtM,yBAA4CH,UAAasM,KAEtE,kBAAC,IAAD,CAAOG,KAAMtM,6BAAgDH,UAAW0M,KAExE,kBAAC,IAAD,CAAOD,KAAMtM,WAA8BH,UAAW4G,Q,oBCGvD+F,GAfF,WAEX,OACE,oCACE,kBAACC,GAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAQC,SAAS,UACb,kBAAC,EAAD,OAEJ,kBAAC,GAAD,SCJOC,G,kDAVb,WAAYxL,GAAO,IAAD,6BAChB,cAAMA,GACNyL,SAASxM,MAAQ,gBAFD,E,qDAKhB,OACE,kBAAC,GAAD,U,GAPYuD,aCOEkJ,QACW,cAA7BhK,OAAOiK,SAASC,UAEe,UAA7BlK,OAAOiK,SAASC,UAEhBlK,OAAOiK,SAASC,SAAStB,MACvB,2D,OCVNuB,IAASC,OAAO,kBAAC,GAAD,MAASL,SAASM,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7B,MAAK,SAAA8B,GACjCA,EAAaC,iB","file":"static/js/main.937e0c81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.2cf8023d.jpg\";","import React,{useState} from \"react\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Link} from 'react-router-dom';\n\nconst NavBar = ()=>{\n  const [value, setValue] = useState(0);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  return(\n      <div className = {classes.root}>\n        <Tabs value = {value} onChange = {(event,newValue)=>{setValue(newValue)}}>\n          <Tab value = {0} label = \"HOME\" component = {Link} to ={process.env.PUBLIC_URL + \"/\"}/>\n          {/* <Tab value = {1} label = \"EXPERIENCE\" component = {Link} to =\"/experience\"/>\n          <Tab value = {2} label = \"ACTIVITY\" component = {Link} to =\"/activity\"/> */}\n        </Tabs>\n      </div>\n  )\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\n\n\n// import Logo from './Logo/Logo';\nimport Navbar from \"./Nav/Nav\";\n\n\nconst Header = ()=>{\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  return(\n    <>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Resume\n        </Typography>\n        <Navbar/>\n        {/* <Button component ={Link} to ={process.env.PUBLIC_URL + \"/login\"} color=\"inherit\">Login</Button>\n        <Button component ={Link} to ={process.env.PUBLIC_URL + \"/logout\"} color=\"inherit\">Logout</Button>\n        <Button component ={Link} to ={process.env.PUBLIC_URL + \"/create-account\"} color=\"inherit\">Create Account</Button> */}\n        {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton> */}\n      </Toolbar>\n    </>\n  )\n}\n\n// class Header extends Component{\n//   constructor(props){\n//     super(props);\n//     this.info = this.props.resume;\n//     this.onNavChange = this.props.onNavChange;\n//   }\n//   componentDidMount(){\n//     window.addEventListener(\"scroll\", this.resizeHeaderOnScroll);\n//   }\n\n//   resizeHeaderOnScroll(){\n//     console.log(window.pageYOffset);\n//     const distanceY = window.pageYOffset;\n//     const shrinkOn = 100;\n//     const headerEl = document.getElementsByClassName(\"header\")[0];\n\n//     if (distanceY > shrinkOn){\n//       headerEl.classList.add(\"shrink\");\n//       document.getElementById(\"space\").style.display = \"none\";\n//       document.getElementById(\"role\").style.display = \"none\";\n//     }\n//     else{\n//       headerEl.classList.remove(\"shrink\");\n//       document.getElementById(\"space\").style.display = \"block\";\n//       document.getElementById(\"role\").style.display = \"block\";\n//     }\n//     // console.log(headerEl);\n//     // console.log(document.documentElement.scrollTop);\n//   }\n\n//   render(){\n//     return(\n//       <div className = \"header\">\n//         <div id = \"space\">\n//         </div>\n//         <h1 className = \"title\" id = \"name\">\n//           {this.info.name}\n//         </h1>\n//         <h3 className = \"title\" id = \"role\">\n//           {this.info.role}\n//         </h3>\n\n//         <hr/>\n\n//         <Navbar\n//           onNavChange = {this.onNavChange}\n//         />\n//       </div>\n//     )\n//   }\n// }\n\nexport default Header;\n","import React from 'react';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from \"../Data/image.jpg\";\n\nconst useStyles = makeStyles((theme) =>({\n    root: {\n        display: 'flex',\n        flexDirection: \"column\",\n        '& > *': {\n          margin: theme.spacing(1),\n        },\n        alignItems: \"center\",\n        paddingTop:40,\n        paddingBottom:40\n      },\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n      }\n}));\n\nconst User = (props)=>{\n    const classes = useStyles();\n    const userInfo = props.userInfo;\n\n    return(\n        <Paper elevation = {3} className = {classes.root}>\n            <Avatar alt=\"Remy Sharp\" src={Image} className={classes.large} />\n            <Typography variant=\"h5\" component=\"h2\">\n                {userInfo.name}\n            </Typography>\n            <Typography color=\"textSecondary\">\n                {userInfo.role}\n            </Typography>\n            {/* <Typography variant=\"body2\" component=\"p\">\n                icons for phone and related sources...\n            </Typography> */}\n        </Paper>\n    )\n}\n\nexport default User;","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\n\nimport { Typography } from '@material-ui/core';\n\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\n\nconst About = (props)=>{\n    const userInfo = props.userInfo;\n\n    return(\n        <Paper elevation ={3}>\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <DoneIcon />\n                    </ListItemAvatar>\n                    <Typography>\n                        {userInfo.objective}\n                    </Typography>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n                <ListItem>\n                    <ListItemAvatar>\n                        <MyLocationIcon />\n                    </ListItemAvatar>\n                    <Typography>\n                        {userInfo.permanentAddress}\n                    </Typography>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n                <ListItem>\n                    <ListItemAvatar>\n                        <SmartphoneIcon />\n                    </ListItemAvatar>\n                    <Typography>\n                        {userInfo.phone}\n                    </Typography>\n                </ListItem>\n            </List>\n        </Paper>\n    )\n}\n\nexport default About;","import React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false\n  };\n\n  static defaultProps = {\n    valueStart: 0\n  };\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction\n          }\n        })}\n      >\n        {({ value }) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressProvider;\n","import React from 'react';\n\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"../AnimatedProgressProvider\";\nimport { Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root:{\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems: \"center\"\n    }\n})\n\nconst Skill = (props)=>{\n    const years = props.years;\n    const skillName = props.skillName;\n\n    const classes = useStyles();\n\n    // const years = 3;\n    return(\n        <div className = {classes.root}>\n            <AnimatedProgressProvider\n                valueStart={0}\n                valueEnd={years}\n                duration={years/2}\n                easingFunction={easeQuadInOut}\n                > \n                {value => {\n                    const roundedValue = Math.round(value);\n                    return (\n                        <CircularProgressbar\n                        value={value}\n                        maxValue = {5}\n                        text={`${roundedValue}yrs`}\n                        /* This is important to include, because if you're fully managing the\n                        animation yourself, you'll want to disable the CSS animation. */\n                        styles={buildStyles({ \n                            pathTransition: \"none\",\n                            // strokeLinecap: \"butt\" \n                        })}\n                        />\n                        );\n                    }}\n            </AnimatedProgressProvider>\n            <Typography variant=\"h5\">\n                {skillName}\n            </Typography>\n        </div>\n    )\n};\n\nexport default Skill;","import React from 'react';\n\nimport Skill from './Skill';\n\nimport { Paper,makeStyles,Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root:{\n        display:\"flex\",\n        padding:40\n    }\n})\nconst Skills = (props)=>{\n    const classes = useStyles();\n    \n    const skills = props.skillInfo;\n\n    return(\n        <Paper elevation={3} className = {classes.root}>\n            <Grid container spacing = {10}>\n                {skills.map( (skill,key)=>{\n                    return(\n                        <Grid item xs key = {key}>\n                            <Skill years = {skill.year} skillName = {skill.name}/>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nimport {Typography, ListItem, ListItemText, makeStyles, Divider} from \"@material-ui/core\";\nimport { Link} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    listItems:{\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"start\"\n    },\n    summary:{\n        paddingLeft:\"10px\"\n    }\n})\n\nconst Experience = (props)=>{\n    const classes = useStyles();\n    \n    var {title, course, startDate,endDate, summary} = props.experience;\n\n    var date = \"\";\n    if(course !== \"\"){\n        date = date.concat(course + \" / \");\n    };\n    date = date.concat(startDate +\n    \" - \" +\n    endDate);\n\n    return(\n        <div>\n            <Divider/>\n            <ListItem className = {classes.listItems}>\n                <ListItemText\n                    primary={\n                        <Typography variant=\"h6\" component={Link} to={process.env.PUBLIC_URL + `/pages/${title}`}>\n                            {title}\n                        </Typography>\n                    }\n                    secondary={date}\n                />\n                <ListItemText className ={classes.summary}>\n                    {summary.map((point,key) =>{\n                        return(\n                            <Typography key = {key}>\n                                {point.point}\n                            </Typography>\n                        )\n                    })}\n                </ListItemText>\n            </ListItem>\n        </div>\n    )\n}\n\nexport default Experience;","import React from 'react';\n\nimport {Typography, List, Paper, makeStyles} from \"@material-ui/core\";\n\nimport Experience from './Experience';\n\nconst useStyles = makeStyles({\n    experiences:{\n        padding:'20px'\n    },\n})\n\nconst ExperienceList = (props)=>{\n    const classes = useStyles();\n    const experiences = props.experiences;\n\n    return(\n        <Paper elevation ={3} className = {classes.experiences}>\n            <Typography variant = \"h5\">\n                Experiences\n            </Typography>\n            <List>\n                {experiences.map((experience, key)=>{\n                    return(\n                        <Experience experience = {experience} key = {key}/>\n                    )\n                })}\n            </List>\n        </Paper>\n    )\n}\nexport default ExperienceList;","import React from \"react\";\n\n// import Timeline from \"../../component/TimelineBio\";\nimport User from '../../component/User';\nimport About from '../../component/About';\nimport Skills from '../../component/skills/SkillList';\nimport ExperienceList from '../../component/experiences/ExperienceList';\n\nimport {Grid} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport Data from '../../Data/resume.json';\n\nconst useStyles = makeStyles({\n  root: {\n    flexWrap: \"wrap\"\n  },\n  child:{\n    marginTop:20\n  }\n})\n\nconst Home = ()=>{\n\n  const classes = useStyles();\n\n  return(\n    <>\n      {/* <p>Home</p> */}\n      <Grid container spacing = {2} className = {classes.root}>\n        <Grid container direction = \"column\" item md = {3} xs = {12}>\n          <Grid className = {classes.child}>\n            <User userInfo = {Data.basics}/>\n          </Grid>\n        </Grid>\n        <Grid container direction =\"column\" item md = {9} xs = {12}>\n          <Grid className = {classes.child}>\n            <About userInfo = {Data.basics}/>\n          </Grid>\n          <Grid className = {classes.child}>\n            <Skills skillInfo = {Data.skills}/>\n          </Grid>\n          {/* For the experiences */}\n          <Grid className = {classes.child}>\n            <ExperienceList experiences = {Data.experiences}/>\n          </Grid>\n          {/* For the projects */}\n          <Grid className = {classes.child}>\n            <ExperienceList experiences = {Data.projects}/>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* <Paper>\n      <Timeline/>\n      </Paper> */}\n    </>\n  )\n}\n\n// class Home extends Component {\n//   constructor(props){\n//     super(props);\n//     this.about = this.props.resume;\n//   }\n\n//   render(){\n//     return(\n//       <div className = \"home\">\n//         <div className = \"orange box\" id = \"summary\">\n//           <h2 className = \"title white bold\">\n//             WHO AM I\n//           </h2>\n//           <p className = \"white\">\n//             {this.about.summary}\n//           </p>\n//           <button>\n//             Resume\n//           </button>\n//         </div>\n//         <div className = \"gray box\" id = \"personal-info\">\n//           <h2 className = \"title white bold\">\n//             Personal info\n//           </h2>\n//           <p className = \"white\">\n//             {this.about.permanentAddress}\n//           </p>\n//         </div>\n//         <div className = \"gray box\" id = \"achievement\">\n//           <h2 className = \"title white bold\">\n//             achievement\n//           </h2>\n//           <Timeline/>\n//           {/* single line with the dots representing event*/}\n//         </div>\n//         <div className = \"box\" id = \"skills\">\n//           <h2 className = \"title bold\">\n//             Skills\n//           </h2>\n//           {/*bar chart using d3*/}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Home;","import React,{useEffect, useState} from 'react';\nimport * as d3 from 'd3'\nimport * as topojson from 'topojson'\n\n\nconst Map = (props)=>{\n\n    const {mapData,coronaData,date,setDate,type,setType} = props;\n    const [yesterday,setYesterday] = useState(\"\")\n\n    // hooks  -----------------------------------------------\n    \n    //similar to componentdidMount, as it does not run except the initial render.\n    useEffect(()=>{\n        setCaptions();\n        loadButtons();\n        loadTooltip();\n        loadMapData(0.5);\n    },[]);\n\n    useEffect(()=>{\n        // console.log(\"t\")\n        loadCaseData();\n    },[date, type,yesterday])\n\n\n    // components  ---------------------------------------------\n\n    //sets the titles on the caption and subcaptions\n    function setCaptions() {\n        const element = d3.select(\".coronaMap\");\n        element\n            .select(\".caption\")\n            .text(\"Daily update of covid cases at Virginia\");\n        element\n            .select(\".subcaption\")\n            .text(\"shows the number of death, hospitalization, and cases\")\n    }\n\n    //addes a button to select the date for the specific day selected,\n    //and another button to select the type of the data to display among\n    //deaths, hospitaliziations, and total cases\n    function loadButtons(){\n        const dateButton = d3.select(\".dateButton\")\n        const typeButton = d3.select(\".typeButton\")\n\n        const types = [\"deaths\",\"hospitalizations\",\"cases\"]\n\n        // handles date button\n        dateButton\n        .on(\"change\", (event)=>{\n            setDate(event.target.value)\n            try{\n                setYesterday(event.target[event.target.selectedIndex + 1].value)\n            }\n            catch(e){\n                setYesterday(\"\")\n                console.log(\"first data\")\n            }\n        })\n        .selectAll(\"option\")\n        .data(getAvailableDates())\n        .enter()\n        .append(\"option\")\n        .text((value, key)=>{\n            return value\n        })\n\n        setDate(getAvailableDates()[0])\n        setYesterday(getAvailableDates()[1])\n\n        // handles type button\n        typeButton\n        .on(\"change\",(event)=>{\n            setType(event.target.value)\n        })\n        .selectAll(\"option\")\n        .data(types)\n        .enter()\n        .append(\"option\")\n        .attr(\"value\", (value,key)=>{\n            return value;\n        })\n        .text((value,key)=>{\n            return value;\n        })\n\n        setType(types[0])\n    }\n\n\n    //sets property for the tooltip\n    function loadTooltip(){\n        d3\n        .select(\".tooltip\")\n        .style(\"visibility\",\"hidden\")\n        .style(\"position\", \"absolute\")\n        .style(\"background-color\",\"white\")\n        .style(\"padding\", \"2px\")\n        .style(\"border\",\"thin solid black\")\n    }\n\n    //using the url, loads the map data and display\n    function loadMapData(scale){\n        const [width,height] = [1920, 1080];\n\n        let projection = d3\n        .geoMercator()\n        .scale(20000 * scale)\n        .translate([0, 0]);\n\n        let countyPath = d3\n        .geoPath()\n        .projection(projection);\n\n        let svg = d3\n        .select(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n        let state = topojson.feature(mapData, mapData.objects.cb_2015_virginia_county_20m);\n        let bounds = countyPath.bounds(state);\n\n        projection.translate([width / 2 - (bounds[0][0] + bounds[1][0]) / 2,height / 2 - (bounds[0][1] + bounds[1][1]) / 2]);\n        \n        let tooltip = d3.select(\".tooltip\")\n\n        svg\n        .selectAll(\"path\")\n        .data(state.features)\n        .enter()\n        .append(\"path\")\n        .classed(\"county\", true)\n        .attr(\"id\", county =>{\n            return county.properties.GEOID\n        })\n        .attr(\"name\", county =>{\n            return county.properties.NAME\n        }\n        )\n        .attr(\"fill\", \"grey\")\n        .style(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"1px\")\n        .style(\"stroke-linecap\", \"round\")\n        .style(\"stroke-linejoin\",\"round\")\n        .attr(\"value\", 0)\n        .attr(\"d\", countyPath)\n        .on(\"click\", (event) =>{\n            console.log(event)\n        })\n        .on(\"mouseover\", (event) => {\n            //sets design when mouse hovers\n            d3.select(event.target)\n            .style(\"opacity\", \"0.5\")\n            .style(\"stroke-width\", \"2px\")\n            \n            var value = event.target.getAttribute(\"value\");\n            tooltip.text(`${event.target.getAttribute(\"name\")}, ${value}`);\n            return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (event) => {\n            return tooltip\n            .style(\"top\", (event.pageY + 10) + \"px\")\n            .style(\"left\",(event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (event) => {\n            //converts the design back when mouse outs\n            d3.select(event.target)\n            .style(\"opacity\", \"1\")\n            .style(\"stroke-width\", \"1px\")\n\n            tooltip.text(\"\");\n            return tooltip.style(\"visibility\", \"hidden\");\n        });\n    }\n\n    //adds the associated colors to the map based on the\n    //selected button options\n    function loadCaseData(){\n        const currentData = coronaData.filter((data)=>{\n            return data.report_date === date\n        })\n        const yesterdayData = coronaData.filter((data)=>{\n            return data.report_date === yesterday\n        })\n        \n        //set the max nubmer for the color based on the type\n        let max = type === \"deaths\"? 5: type === \"hospitalizations\"? 5: type === \"cases\"? 100 : null;\n\n        //updated values from the day before\n        //daily updated values\n        currentData.map((data, index)=>{\n            let value;\n            let currentCounty = d3\n                                .select(\"svg\")\n                                .select('[id = \"' + data.fips + '\"]')\n            \n            //parse data based on the type\n            try{\n                if(type === \"deaths\"){\n                    if(yesterdayData[index] === undefined){\n                        value = parseInt(data.deaths)\n                    }else{\n                        value = data.deaths - yesterdayData[index].deaths\n                    }\n                }\n                else if(type === \"hospitalizations\"){\n                    if(yesterdayData[index] === undefined){\n                        value = parseInt(data.hospitalizations)\n                    }\n                    else{\n                        value = data.hospitalizations - yesterdayData[index].hospitalizations\n                    }\n                }\n                else if(type === \"cases\"){\n                    if(yesterdayData[index] === undefined){\n                        value = parseInt(data.total_cases)\n                    }\n                    else{\n                        value = data.total_cases - yesterdayData[index].total_cases\n                    }\n                }\n                else{\n                    console.log(\"wrong type\")\n                }\n                \n                //set value on tooltip\n                currentCounty\n                .attr(\"value\", `${type}: ${value}`)\n            }\n            catch(e){\n                console.log(\"data is not loaded yet\")\n            }\n\n            //set color of each county\n            currentCounty\n            .attr(\"fill\", ()=>{\n                return d3\n                        .scaleLinear()\n                        .domain([-1, 0, max/2, max])\n                        .range(['black', \"green\", \"yellow\", \"red\"])\n                        .interpolate(d3.interpolateRgb)(value);\n            })\n        })\n    }\n\n\n    //gets all the available dates from the source url\n    function getAvailableDates(){\n        return [...new Set(coronaData.map((each)=>{\n            return  each.report_date\n        }))]\n    }\n\n    // return   --------------------------------------------------\n    //basic structure of the components.\n    return(\n        <div className = \"coronaMap\" style={{textAlign:\"center\"}}>\n            <h2 className =\"caption\">\n                where caption will be\n            </h2>\n            <p className = \"subcaption\">\n                where subcaption will be\n            </p>\n            <select className = \"dateButton map\"></select>\n            <select className = \"typeButton map\"></select>\n            <svg></svg>\n            <div className = \"tooltip\"></div>\n        </div>\n    );\n}\n\nexport default Map;","import React,{useState,useEffect} from 'react';\nimport Map from './Map';\nimport * as d3 from \"d3\";\n\nconst virginiaMapDataURL = \"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/VA-51-virginia-counties.json\";\nconst coronaVirginiaDatasetURL = \"https://data.virginia.gov/resource/bre9-aqqr.json\";\nconst CovidCases = () => {\n  const [loading, setLoading] = useState(true);\n  const [mapData, setMapData] = useState(\"\");\n  const [coronaData, setCoronaData] = useState(\"\");\n  const [date,setDate] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  useEffect(()=>{\n    if(loading){\n      //set loading be true after getting data\n      d3.json(virginiaMapDataURL).then((mapData)=>{\n        d3.json(coronaVirginiaDatasetURL).then((coronaData)=>{\n          setMapData(mapData);\n          setCoronaData(coronaData);\n          setLoading(false);\n        })\n      });\n    }\n  },[loading]);\n\n  return (\n    <div>\n      {\n        !loading &&\n        <Map\n          mapData={mapData}\n          coronaData = {coronaData}\n          date ={date}\n          setDate = {setDate}\n          type = {type}\n          setType = {setType}\n          setLoading = {setLoading}\n        />\n      }\n    </div>\n  );\n}\n\nexport default CovidCases;\n","import React from 'react';\nimport \"./Experience.css\";\nimport CovidMap from \"../../component/projects/covidCases\";\n\nconst Experience = ({match})=>{\n    if(match.params.projectName === \"Coordinated Multiple Views\"){\n        return(\n            <>\n                <p>{match.params.projectName}</p>\n                <CovidMap/>\n            </>\n        )\n    }\n    else{\n        return(\n            <p>{match.params.projectName}</p>\n        )\n    }\n}\n\n// class Experience extends Component{\n//   constructor(props){\n//     super(props);\n//     this.exp = this.props.exp;\n//   }\n//   render(){\n//     const list = this.exp.map((each, key) =>\n//       <div className = \"experience\" key = {key}>\n//         <h3 className = \"experience title\">\n//           {each.title}\n//         </h3>\n//         <p className = \"experience date\">\n//           {each.startDate} {each.endDate}\n//         </p>\n//         <p className = \"experience company\">\n//           {each.company}\n//         </p>\n//         <p className = \"experience course\">\n//           {each.course}\n//         </p>\n//         <ul className = \"experience description\">\n//           {each.summary.map((summary,key) =>\n//             <li className = \"summary\" key = {key}>\n//               {summary.point}\n//             </li>\n//           )}\n//         </ul>\n//       </div>\n//     )\n\n//     return(\n//       <div>\n//         {list}\n//       </div>\n//     );\n//   }\n// }\n\nexport default Experience;\n","import React from \"react\";\n\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst Form = (props)=>{\n    \n    if(props.types === \"login\"){\n        return(\n            <Paper>\n                <TextField id=\"standard-basic\" label = \"username\"/>\n                <TextField id=\"standard-basic\" label = \"password\"/>\n                <Button>login</Button>\n            </Paper>\n        )\n    }\n    else if(props.types === \"createAccount\"){\n        return(\n            <Paper>\n                <TextField id=\"standard-basic\" label = \"First Name\"/>\n                <TextField id=\"standard-basic\" label = \"Last Name\"/>\n                <TextField id=\"standard-basic\" label = \"username\"/>\n                <TextField id=\"standard-basic\" label = \"password\"/>\n\n                <Button>Create Account</Button>\n            </Paper>\n        )\n    }\n    else{\n        return(\n            <p>Other types</p>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\n\nimport Form from '../../../component/Form';\n\nconst Login = ()=>{\n    return(\n        <div className = \"loginPage\">\n            <Form types = \"login\"/>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\n\nconst Logout = ()=>{\n    return(\n        <div className=\"LogoutPage\">\n            <p>logout</p>\n        </div>\n    )\n}\n\nexport default Logout;","import React from 'react';\n\nimport Form from '../../../component/Form';\n\nconst CreateAccount = ()=>{\n    return(\n        <div className = \"createAccountPage\">\n            <Form types = \"createAccount\"/>\n        </div>\n    )\n};\n\nexport default CreateAccount;","import React from 'react';\nimport{Route, Switch} from 'react-router-dom';\n\nimport {Container} from \"@material-ui/core\";\n\nimport Home from './Pages/HomePage';\nimport ExperiencePage from './Pages/ExperiencePage';\n\nimport Login from './Pages/LoginPages/LoginPage';\nimport Logout from './Pages/LoginPages/LogoutPage';\nimport CreateAccount from './Pages/LoginPages/CreateAccountPage';\n// import Activity from './Page/Activity';\n\nconst Body = () =>{\n    return(\n        <Container>\n            <Switch>\n                <Route path={process.env.PUBLIC_URL + \"/login\"} component = {Login}/>\n                <Route path={process.env.PUBLIC_URL + \"/logout\"} component = {Logout}/>\n                <Route path={process.env.PUBLIC_URL + \"/create-account\"} component = {CreateAccount}/>\n                \n                <Route path={process.env.PUBLIC_URL + \"/pages/:projectName\"} component={ExperiencePage}/>\n                {/* <Route path=\"/activity\" component={Home}/> */}\n                <Route path={process.env.PUBLIC_URL + \"/\"} component={Home} />\n\n            </Switch>\n        </Container>\n    )\n}\n\nexport default Body;","import React from 'react';\nimport {  BrowserRouter as Router} from 'react-router-dom';\n\nimport Header from \"./Header/Header\";\nimport Body from \"./Body/Body\";\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppBar from '@material-ui/core/AppBar';\n\n\nconst Main = () => {\n    \n  return(\n    <>\n      <CssBaseline />\n      <Router>\n        <AppBar position=\"static\">\n            <Header/>\n        </AppBar>\n        <Body/>\n      </Router>\n    </>\n  )\n}\n\nexport default Main;\n\n\n// const navClick = this.state.nav;\n// let nav;\n// var def = <Home resume = {Resume.basics}/>;\n\n\n// if(navClick === \"HOME\"){\n//   nav = def;\n// }\n// else if(navClick === \"EXPERIENCE\"){\n//   nav = <Experience exp = {Resume.experiences}/>;\n// }\n// else if(navClick === \"ACTIVITY\"){\n//   nav = <Activity act = {Resume.activities}/>;\n// }\n// else {\n//   nav = def;\n// }\n// return (\n//   <div className = \"main\">\n//     <Header\n//       resume = {Resume.basics}\n//       onNavChange = {this.setNav}\n//     />\n//     <div className = \"content\">\n//       {nav}\n//     </div>\n//   </div>\n// );\n// }","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './Main/Main';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    document.title = \"Resume:Jaeung\"\n  }\n  render(){\n    return (\n      <Main/>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}